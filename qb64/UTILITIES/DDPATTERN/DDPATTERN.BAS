$Debug
_CONTROLCHR OFF
DIM SHARED CANVAS AS LONG
CANVAS& = _NEWIMAGE(800, 800, 32)
SCREEN CANVAS&
_TITLE "DDPATTERN"

CONST NUM_PATTERNS_IN_FILE  = 30
CONST NUM_COLORS_IN_PALETTE  = 15
CONST NUM_ROWS_IN_PATTERN   = 8
CONST NUM_COLS_IN_PATTERN   = 8
CONST PATTERN_CELL_W        = 2
CONST PATTERN_CELL_H        = 2
CONST NUM_PATTERN_GRID_X    = 3
CONST NUM_PATTERN_GRID_Y    = 3

TYPE DAZZLEDRAW_PATTERN_STRUCT
    HEADER    AS STRING * 76
    PATTERN1  AS STRING * 64
    PATTERN2  AS STRING * 64
    PATTERN3  AS STRING * 64
    PATTERN4  AS STRING * 64
    PATTERN5  AS STRING * 64
    PATTERN6  AS STRING * 64
    PATTERN7  AS STRING * 64
    PATTERN8  AS STRING * 64
    PATTERN9  AS STRING * 64
    PATTERN10 AS STRING * 64
    PATTERN11 AS STRING * 64
    PATTERN12 AS STRING * 64
    PATTERN13 AS STRING * 64
    PATTERN14 AS STRING * 64
    PATTERN15 AS STRING * 64
    PATTERN16 AS STRING * 64
    PATTERN17 AS STRING * 64
    PATTERN18 AS STRING * 64
    PATTERN19 AS STRING * 64
    PATTERN20 AS STRING * 64
    PATTERN21 AS STRING * 64
    PATTERN22 AS STRING * 64
    PATTERN23 AS STRING * 64
    PATTERN24 AS STRING * 64
    PATTERN25 AS STRING * 64
    PATTERN26 AS STRING * 64
    PATTERN27 AS STRING * 64
    PATTERN28 AS STRING * 64
    PATTERN29 AS STRING * 64
    PATTERN30 AS STRING * 64
END TYPE

TYPE APPLE2_COLOR_PALETTE
    BLACK   AS _UNSIGNED LONG
    GRAY_1  AS _UNSIGNED LONG
    D_BLUE  AS _UNSIGNED LONG
    PURPLE  AS _UNSIGNED LONG
    RED     AS _UNSIGNED LONG
    ORANGE  AS _UNSIGNED LONG
    PINK    AS _UNSIGNED LONG
    YELLOW  AS _UNSIGNED LONG
    GRAY_2  AS _UNSIGNED LONG
    D_GREEN AS _UNSIGNED LONG
    BROWN   AS _UNSIGNED LONG
    L_GREEN AS _UNSIGNED LONG
    AQUA    AS _UNSIGNED LONG
    M_BLUE  AS _UNSIGNED LONG
    L_BLUE  AS _UNSIGNED LONG
    WHITE   AS _UNSIGNED LONG
END TYPE

DIM DAZZLEDRAW_PATTERNS_DATA1 AS DAZZLEDRAW_PATTERN_STRUCT
DIM DAZZLEDRAW_PATTERNS_DATA2 AS DAZZLEDRAW_PATTERN_STRUCT
DIM DAZZLEDRAW_PATTERNS_DATA3 AS DAZZLEDRAW_PATTERN_STRUCT
DIM DAZZLEDRAW_PATTERNS_DATA4 AS DAZZLEDRAW_PATTERN_STRUCT
DIM SHARED APPLE2_COLOR_S AS APPLE2_COLOR_PALETTE
DIM SHARED APPLE2_COLOR_N(0 TO NUM_COLORS_IN_PALETTE) AS _UNSIGNED LONG

DIM f AS LONG
DIM SHARED ptrn_file AS STRING

APPLE2_COLOR_S.BLACK   = _RGB(0, 0, 0)
APPLE2_COLOR_S.GRAY_1  = _RGB(82, 82, 82)
APPLE2_COLOR_S.D_BLUE  = _RGB(0, 0, 163)
APPLE2_COLOR_S.PURPLE  = _RGB(206, 47, 214)
APPLE2_COLOR_S.RED     = _RGB(206, 8, 45)
APPLE2_COLOR_S.ORANGE  = _RGB(255, 101, 0)
APPLE2_COLOR_S.PINK    = _RGB(255, 158, 154)
APPLE2_COLOR_S.YELLOW  = _RGB(255, 255, 0)
APPLE2_COLOR_S.GRAY_2  = _RGB(173, 173, 173)
APPLE2_COLOR_S.D_GREEN = _RGB(5, 99, 43)
APPLE2_COLOR_S.BROWN   = _RGB(157, 100, 0)
APPLE2_COLOR_S.L_GREEN = _RGB(24, 222, 0)
APPLE2_COLOR_S.AQUA    = _RGB(57, 255, 142)
APPLE2_COLOR_S.M_BLUE  = _RGB(40, 42, 255)
APPLE2_COLOR_S.L_BLUE  = _RGB(96, 155, 255)
APPLE2_COLOR_S.WHITE   = _RGB(255, 255, 255)

APPLE2_COLOR_N(0)  = APPLE2_COLOR_S.BLACK
APPLE2_COLOR_N(1)  = APPLE2_COLOR_S.D_BLUE
APPLE2_COLOR_N(2)  = APPLE2_COLOR_S.D_GREEN
APPLE2_COLOR_N(3)  = APPLE2_COLOR_S.M_BLUE
APPLE2_COLOR_N(4)  = APPLE2_COLOR_S.BROWN
APPLE2_COLOR_N(5)  = APPLE2_COLOR_S.GRAY_1
APPLE2_COLOR_N(6)  = APPLE2_COLOR_S.L_GREEN
APPLE2_COLOR_N(7)  = APPLE2_COLOR_S.AQUA
APPLE2_COLOR_N(8)  = APPLE2_COLOR_S.RED
APPLE2_COLOR_N(9)  = APPLE2_COLOR_S.PURPLE
APPLE2_COLOR_N(10) = APPLE2_COLOR_S.GRAY_2
APPLE2_COLOR_N(11) = APPLE2_COLOR_S.L_BLUE
APPLE2_COLOR_N(12) = APPLE2_COLOR_S.ORANGE
APPLE2_COLOR_N(13) = APPLE2_COLOR_S.PINK
APPLE2_COLOR_N(14) = APPLE2_COLOR_S.YELLOW
APPLE2_COLOR_N(15) = APPLE2_COLOR_S.WHITE

f& = FREEFILE

ptrn_file$ = "ORIG.PATTERNS.bin"
OPEN ptrn_file$ FOR BINARY AS f&
GET f&, , DAZZLEDRAW_PATTERNS_DATA1
CLOSE f&

render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN1$,  PATTERN_CELL_W*1, 0  * NUM_PATTERN_GRID_Y,  1
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN2$,  PATTERN_CELL_W*1, 1  * NUM_PATTERN_GRID_Y,  2
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN3$,  PATTERN_CELL_W*1, 2  * NUM_PATTERN_GRID_Y,  3
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN4$,  PATTERN_CELL_W*1, 3  * NUM_PATTERN_GRID_Y,  4
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN5$,  PATTERN_CELL_W*1, 4  * NUM_PATTERN_GRID_Y,  5
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN6$,  PATTERN_CELL_W*1, 5  * NUM_PATTERN_GRID_Y,  6
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN7$,  PATTERN_CELL_W*1, 6  * NUM_PATTERN_GRID_Y,  7
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN8$,  PATTERN_CELL_W*1, 7  * NUM_PATTERN_GRID_Y,  8
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN9$,  PATTERN_CELL_W*1, 8  * NUM_PATTERN_GRID_Y,  9
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN10$, PATTERN_CELL_W*1, 9  * NUM_PATTERN_GRID_Y, 10
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN11$, PATTERN_CELL_W*1, 10 * NUM_PATTERN_GRID_Y, 11
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN12$, PATTERN_CELL_W*1, 11 * NUM_PATTERN_GRID_Y, 12
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN13$, PATTERN_CELL_W*1, 12 * NUM_PATTERN_GRID_Y, 13
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN14$, PATTERN_CELL_W*1, 13 * NUM_PATTERN_GRID_Y, 14
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN15$, PATTERN_CELL_W*1, 14 * NUM_PATTERN_GRID_Y, 15
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN16$, PATTERN_CELL_W*3, 0  * NUM_PATTERN_GRID_Y, 16
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN17$, PATTERN_CELL_W*3, 1  * NUM_PATTERN_GRID_Y, 17
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN18$, PATTERN_CELL_W*3, 2  * NUM_PATTERN_GRID_Y, 18
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN19$, PATTERN_CELL_W*3, 3  * NUM_PATTERN_GRID_Y, 19
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN20$, PATTERN_CELL_W*3, 4  * NUM_PATTERN_GRID_Y, 20
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN21$, PATTERN_CELL_W*3, 5  * NUM_PATTERN_GRID_Y, 21
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN22$, PATTERN_CELL_W*3, 6  * NUM_PATTERN_GRID_Y, 22
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN23$, PATTERN_CELL_W*3, 7  * NUM_PATTERN_GRID_Y, 23
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN24$, PATTERN_CELL_W*3, 8  * NUM_PATTERN_GRID_Y, 24
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN25$, PATTERN_CELL_W*3, 9  * NUM_PATTERN_GRID_Y, 25
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN26$, PATTERN_CELL_W*3, 10 * NUM_PATTERN_GRID_Y, 26
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN27$, PATTERN_CELL_W*3, 11 * NUM_PATTERN_GRID_Y, 27
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN28$, PATTERN_CELL_W*3, 12 * NUM_PATTERN_GRID_Y, 28
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN29$, PATTERN_CELL_W*3, 13 * NUM_PATTERN_GRID_Y, 29
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA1.PATTERN30$, PATTERN_CELL_W*3, 14 * NUM_PATTERN_GRID_Y, 30

ptrn_file$ = "MIXED.COLORS.bin"
OPEN ptrn_file$ FOR BINARY AS f&
GET f&, , DAZZLEDRAW_PATTERNS_DATA2
CLOSE f&

render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN1$,  PATTERN_CELL_W*6, 0  * NUM_PATTERN_GRID_Y,  1
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN2$,  PATTERN_CELL_W*6, 1  * NUM_PATTERN_GRID_Y,  2
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN3$,  PATTERN_CELL_W*6, 2  * NUM_PATTERN_GRID_Y,  3
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN4$,  PATTERN_CELL_W*6, 3  * NUM_PATTERN_GRID_Y,  4
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN5$,  PATTERN_CELL_W*6, 4  * NUM_PATTERN_GRID_Y,  5
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN6$,  PATTERN_CELL_W*6, 5  * NUM_PATTERN_GRID_Y,  6
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN7$,  PATTERN_CELL_W*6, 6  * NUM_PATTERN_GRID_Y,  7
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN8$,  PATTERN_CELL_W*6, 7  * NUM_PATTERN_GRID_Y,  8
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN9$,  PATTERN_CELL_W*6, 8  * NUM_PATTERN_GRID_Y,  9
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN10$, PATTERN_CELL_W*6, 9  * NUM_PATTERN_GRID_Y, 10
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN11$, PATTERN_CELL_W*6, 10 * NUM_PATTERN_GRID_Y, 11
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN12$, PATTERN_CELL_W*6, 11 * NUM_PATTERN_GRID_Y, 12
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN13$, PATTERN_CELL_W*6, 12 * NUM_PATTERN_GRID_Y, 13
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN14$, PATTERN_CELL_W*6, 13 * NUM_PATTERN_GRID_Y, 14
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN15$, PATTERN_CELL_W*6, 14 * NUM_PATTERN_GRID_Y, 15
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN16$, PATTERN_CELL_W*8, 0  * NUM_PATTERN_GRID_Y, 16
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN17$, PATTERN_CELL_W*8, 1  * NUM_PATTERN_GRID_Y, 17
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN18$, PATTERN_CELL_W*8, 2  * NUM_PATTERN_GRID_Y, 18
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN19$, PATTERN_CELL_W*8, 3  * NUM_PATTERN_GRID_Y, 19
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN20$, PATTERN_CELL_W*8, 4  * NUM_PATTERN_GRID_Y, 20
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN21$, PATTERN_CELL_W*8, 5  * NUM_PATTERN_GRID_Y, 21
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN22$, PATTERN_CELL_W*8, 6  * NUM_PATTERN_GRID_Y, 22
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN23$, PATTERN_CELL_W*8, 7  * NUM_PATTERN_GRID_Y, 23
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN24$, PATTERN_CELL_W*8, 8  * NUM_PATTERN_GRID_Y, 24
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN25$, PATTERN_CELL_W*8, 9  * NUM_PATTERN_GRID_Y, 25
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN26$, PATTERN_CELL_W*8, 10 * NUM_PATTERN_GRID_Y, 26
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN27$, PATTERN_CELL_W*8, 11 * NUM_PATTERN_GRID_Y, 27
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN28$, PATTERN_CELL_W*8, 12 * NUM_PATTERN_GRID_Y, 28
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN29$, PATTERN_CELL_W*8, 13 * NUM_PATTERN_GRID_Y, 29
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA2.PATTERN30$, PATTERN_CELL_W*8, 14 * NUM_PATTERN_GRID_Y, 30

ptrn_file$ = "B.W.PATTERNS1.bin"
OPEN ptrn_file$ FOR BINARY AS f&
GET f&, , DAZZLEDRAW_PATTERNS_DATA3
CLOSE f&

render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN1$,  PATTERN_CELL_W*11, 0  * NUM_PATTERN_GRID_Y,  1
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN2$,  PATTERN_CELL_W*11, 1  * NUM_PATTERN_GRID_Y,  2
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN3$,  PATTERN_CELL_W*11, 2  * NUM_PATTERN_GRID_Y,  3
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN4$,  PATTERN_CELL_W*11, 3  * NUM_PATTERN_GRID_Y,  4
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN5$,  PATTERN_CELL_W*11, 4  * NUM_PATTERN_GRID_Y,  5
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN6$,  PATTERN_CELL_W*11, 5  * NUM_PATTERN_GRID_Y,  6
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN7$,  PATTERN_CELL_W*11, 6  * NUM_PATTERN_GRID_Y,  7
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN8$,  PATTERN_CELL_W*11, 7  * NUM_PATTERN_GRID_Y,  8
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN9$,  PATTERN_CELL_W*11, 8  * NUM_PATTERN_GRID_Y,  9
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN10$, PATTERN_CELL_W*11, 9  * NUM_PATTERN_GRID_Y, 10
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN11$, PATTERN_CELL_W*11, 10 * NUM_PATTERN_GRID_Y, 11
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN12$, PATTERN_CELL_W*11, 11 * NUM_PATTERN_GRID_Y, 12
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN13$, PATTERN_CELL_W*11, 12 * NUM_PATTERN_GRID_Y, 13
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN14$, PATTERN_CELL_W*11, 13 * NUM_PATTERN_GRID_Y, 14
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN15$, PATTERN_CELL_W*11, 14 * NUM_PATTERN_GRID_Y, 15
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN16$, PATTERN_CELL_W*13, 0  * NUM_PATTERN_GRID_Y, 16
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN17$, PATTERN_CELL_W*13, 1  * NUM_PATTERN_GRID_Y, 17
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN18$, PATTERN_CELL_W*13, 2  * NUM_PATTERN_GRID_Y, 18
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN19$, PATTERN_CELL_W*13, 3  * NUM_PATTERN_GRID_Y, 19
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN20$, PATTERN_CELL_W*13, 4  * NUM_PATTERN_GRID_Y, 20
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN21$, PATTERN_CELL_W*13, 5  * NUM_PATTERN_GRID_Y, 21
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN22$, PATTERN_CELL_W*13, 6  * NUM_PATTERN_GRID_Y, 22
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN23$, PATTERN_CELL_W*13, 7  * NUM_PATTERN_GRID_Y, 23
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN24$, PATTERN_CELL_W*13, 8  * NUM_PATTERN_GRID_Y, 24
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN25$, PATTERN_CELL_W*13, 9  * NUM_PATTERN_GRID_Y, 25
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN26$, PATTERN_CELL_W*13, 10 * NUM_PATTERN_GRID_Y, 26
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN27$, PATTERN_CELL_W*13, 11 * NUM_PATTERN_GRID_Y, 27
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN28$, PATTERN_CELL_W*13, 12 * NUM_PATTERN_GRID_Y, 28
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN29$, PATTERN_CELL_W*13, 13 * NUM_PATTERN_GRID_Y, 29
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA3.PATTERN30$, PATTERN_CELL_W*13, 14 * NUM_PATTERN_GRID_Y, 30

ptrn_file$ = "B.W.PATTERNS2.bin"
OPEN ptrn_file$ FOR BINARY AS f&
GET f&, , DAZZLEDRAW_PATTERNS_DATA4
CLOSE f&

render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN1$,  PATTERN_CELL_W*16, 0  * NUM_PATTERN_GRID_Y,  1
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN2$,  PATTERN_CELL_W*16, 1  * NUM_PATTERN_GRID_Y,  2
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN3$,  PATTERN_CELL_W*16, 2  * NUM_PATTERN_GRID_Y,  3
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN4$,  PATTERN_CELL_W*16, 3  * NUM_PATTERN_GRID_Y,  4
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN5$,  PATTERN_CELL_W*16, 4  * NUM_PATTERN_GRID_Y,  5
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN6$,  PATTERN_CELL_W*16, 5  * NUM_PATTERN_GRID_Y,  6
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN7$,  PATTERN_CELL_W*16, 6  * NUM_PATTERN_GRID_Y,  7
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN8$,  PATTERN_CELL_W*16, 7  * NUM_PATTERN_GRID_Y,  8
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN9$,  PATTERN_CELL_W*16, 8  * NUM_PATTERN_GRID_Y,  9
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN10$, PATTERN_CELL_W*16, 9  * NUM_PATTERN_GRID_Y, 10
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN11$, PATTERN_CELL_W*16, 10 * NUM_PATTERN_GRID_Y, 11
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN12$, PATTERN_CELL_W*16, 11 * NUM_PATTERN_GRID_Y, 12
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN13$, PATTERN_CELL_W*16, 12 * NUM_PATTERN_GRID_Y, 13
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN14$, PATTERN_CELL_W*16, 13 * NUM_PATTERN_GRID_Y, 14
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN15$, PATTERN_CELL_W*16, 14 * NUM_PATTERN_GRID_Y, 15
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN16$, PATTERN_CELL_W*18, 0  * NUM_PATTERN_GRID_Y, 16
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN17$, PATTERN_CELL_W*18, 1  * NUM_PATTERN_GRID_Y, 17
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN18$, PATTERN_CELL_W*18, 2  * NUM_PATTERN_GRID_Y, 18
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN19$, PATTERN_CELL_W*18, 3  * NUM_PATTERN_GRID_Y, 19
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN20$, PATTERN_CELL_W*18, 4  * NUM_PATTERN_GRID_Y, 20
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN21$, PATTERN_CELL_W*18, 5  * NUM_PATTERN_GRID_Y, 21
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN22$, PATTERN_CELL_W*18, 6  * NUM_PATTERN_GRID_Y, 22
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN23$, PATTERN_CELL_W*18, 7  * NUM_PATTERN_GRID_Y, 23
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN24$, PATTERN_CELL_W*18, 8  * NUM_PATTERN_GRID_Y, 24
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN25$, PATTERN_CELL_W*18, 9  * NUM_PATTERN_GRID_Y, 25
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN26$, PATTERN_CELL_W*18, 10 * NUM_PATTERN_GRID_Y, 26
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN27$, PATTERN_CELL_W*18, 11 * NUM_PATTERN_GRID_Y, 27
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN28$, PATTERN_CELL_W*18, 12 * NUM_PATTERN_GRID_Y, 28
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN29$, PATTERN_CELL_W*18, 13 * NUM_PATTERN_GRID_Y, 29
render_dazzledraw_pattern_grid DAZZLEDRAW_PATTERNS_DATA4.PATTERN30$, PATTERN_CELL_W*18, 14 * NUM_PATTERN_GRID_Y, 30

SUB render_dazzledraw_pattern_grid (pattern$, x%, y%, num%)
    DIM rows, cols AS INTEGER
    FOR rows% = y% TO y% + NUM_PATTERN_GRID_Y
        FOR cols% = x% TO x% + NUM_PATTERN_GRID_X
            render_dazzledraw_pattern _
                pattern$, _
                cols% * (PATTERN_CELL_W * NUM_COLS_IN_PATTERN), _
                rows% * (PATTERN_CELL_H * NUM_ROWS_IN_PATTERN), _
                PATTERN_CELL_W, _
                PATTERN_CELL_H, _
                num%
        NEXT cols%
    NEXT rows%
END SUB

SUB render_dazzledraw_pattern (pattern$, x%, y%, w%, h%, num%)
    DIM AS INTEGER cols, rows, start_x, end_x, start_y, end_y, pixel, pixel_color
    DIM AS STRING char
    DIM AS _UNSIGNED LONG pattern_color
    DIM color_byte AS _UNSIGNED _BYTE

    DIM img AS LONG
    img& = _NEWIMAGE(NUM_COLS_IN_PATTERN, NUM_ROWS_IN_PATTERN, 32)

    pixel% = 1
    FOR rows% = 1 TO NUM_ROWS_IN_PATTERN
        FOR cols% = 1 TO NUM_COLS_IN_PATTERN
            start_x%        = x% + (w% * cols%)
            end_x%          = start_x% + w%
            start_y%        = y% + (h% * rows%)
            end_y%          = start_y% + h%
            color_byte~%%   = ASC(MID$(pattern$, pixel%, 1))
            char$           = MID$(pattern$, pixel%, 1)
            pixel_color%    = color_byte~%%
            pattern_color~& = APPLE2_COLOR_N(pixel_color%)
            _DEST CANVAS&
            LINE (start_x%, start_y%)-(end_x%, end_y%), pattern_color~&, BF
            _DEST img&
            LINE (start_x%, start_y%)-(end_x%, end_y%), pattern_color~&, BF
            pixel% = pixel% + 1
        NEXT cols%
    NEXT rows%
    ' SAVE single tile
    ' SCREEN img&
    ' SLEEP
    SAVEIMAGE img&, ptrn_file$ + _TRIM$(STR$(num%))
    SCREEN CANVAS&
    _FREEIMAGE img&
END SUB


'https://github.com/QB64Official/qb64/wiki/SAVEIMAGE
SUB SaveImage (image AS LONG, filename AS STRING)
    bytesperpixel& = _PIXELSIZE(image&)
    IF bytesperpixel& = 0 THEN PRINT "Text modes unsupported!": END
    IF bytesperpixel& = 1 THEN bpp& = 8 ELSE bpp& = 24
    x& = _WIDTH(image&)
    y& = _HEIGHT(image&)
    b$="BM????QB64????"+MKL$(40)+MKL$(x&)+MKL$(y&)+MKI$(1)+MKI$(bpp&)+MKL$(0)+"????"+STRING$(16, 0) 'partial BMP header info(???? to be filled later)
    IF bytesperpixel& = 1 THEN
    FOR c& = 0 TO 255 ' read BGR color settings from JPG image + 1 byte spacer(CHR$(0))
        cv& = _PALETTECOLOR(c&, image&) ' color attribute to read. 
        b$ = b$ +CHR$(_BLUE32(cv&))+CHR$(_GREEN32(cv&))+CHR$(_RED32(cv&))+CHR$(0) 'spacer byte
    NEXT
    END IF
    MID$(b$, 11, 4) = MKL$(LEN(b$)) ' image pixel data offset(BMP header)
    lastsource& = _SOURCE
    _SOURCE image&
    IF ((x& * 3) MOD 4) THEN padder$ = STRING$(4 - ((x& * 3) MOD 4), 0)
    FOR py& = y& - 1 TO 0 STEP -1 ' read JPG image pixel color data 
    r$ = ""
    FOR px& = 0 TO x& - 1
    c& = POINT(px&, py&) 'POINT 32 bit values are large LONG values 
    IF bytesperpixel& = 1 THEN r$ = r$ + CHR$(c&) ELSE r$ = r$ + LEFT$(MKL$(c&), 3)
    NEXT px&  
    d$ = d$ + r$ + padder$
    NEXT py&
    _SOURCE lastsource&
    MID$(b$, 35, 4) = MKL$(LEN(d$)) ' image size(BMP header)
    b$ = b$ + d$ ' total file data bytes to create file
    MID$(b$, 3, 4) = MKL$(LEN(b$)) ' size of data file(BMP header)
    IF LCASE$(RIGHT$(filename$, 4)) <> ".bmp" THEN ext$ = ".bmp"
    f& = FREEFILE
    OPEN filename$ + ext$ FOR OUTPUT AS #f&: CLOSE #f& ' erases an existing file
    OPEN filename$ + ext$ FOR BINARY AS #f&
    PUT #f&,,b$
    CLOSE #f&
END SUB
