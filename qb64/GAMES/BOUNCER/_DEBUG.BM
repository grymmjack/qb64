SUB debug_init
    DPRINT "debug_init", DEBUG_MAX
    DEBUG.ENABLED%         = FALSE
    DEBUG.DO_BREAKPOINTS%  = TRUE
    DEBUG.IN_CONSOLE%      = FALSE
    DEBUG.VERBOSE%         = TRUE
    DEBUG.VERBOSITY%       = DEBUG_MIN
    DEBUG.NEXT_STEP%       = TRUE
    DEBUG.CUR_STEP%        = 0
    DEBUG.PREV_STEP%       = 0
    DEBUG.PREV_MARK_TIME$  = ""
    DEBUG.PREV_MARK_TIMER# = 0
    DEBUG.MARK_TIME$       = ""
    DEBUG.MARK_TIMER#      = 0
    IF DEBUG.ENABLED% = TRUE THEN debug_start
END SUB

SUB debug_start
    DPRINT "debug_start", DEBUG_MAX
    DEBUG.ENABLED% = TRUE
    TIMER(MAIN_TIMER%) OFF
END SUB

SUB debug_next
    DPRINT "debug_next", DEBUG_MAX
    IF DEBUG.ENABLED% = TRUE THEN
        DEBUG.PREV_STEP% = DEBUG.CUR_STEP%
        DEBUG.CUR_STEP%  = DEBUG.CUR_STEP% + 1
        DEBUG.NEXT_STEP% = TRUE
    END IF
END SUB

SUB debug_breakpoint (msg$)
    DPRINT "debug_breakpoint", DEBUG_MIN
    IF DEBUG.DO_BREAKPOINTS% = TRUE THEN
        DEBUG.ENABLED% = TRUE
        DEBUG.NEXT_STEP% = FALSE
        TIMER(MAIN_TIMER%) OFF
        DPRINT "[BREAKPOINT REACHED]: " + msg$, DEBUG_MIN
        console_mark
        debug_console
    END IF
END SUB

SUB debug_toggle_do_breakpoints
    DPRINT "debug_toggle_do_breakpoints", DEBUG_MAX
    IF DEBUG.DO_BREAKPOINTS% = TRUE THEN 
        DEBUG.DO_BREAKPOINTS% = FALSE
    ELSE 
        DEBUG.DO_BREAKPOINTS% = TRUE
    ENDIF
END SUB


SUB debug_stop
    DPRINT "debug_stop", DEBUG_MAX
    IF DEBUG.ENABLED% = TRUE THEN
        IF DEBUG.IN_CONSOLE% = TRUE THEN 
            debug_console_hide
        END IF
        DEBUG.ENABLED%   = FALSE
        DEBUG.NEXT_STEP% = FALSE
        TIMER(MAIN_TIMER%) ON
    END IF
END SUB

SUB debug_console
    DPRINT "debug_console", DEBUG_MAX
    IF DEBUG.IN_CONSOLE% = FALSE THEN 
        debug_console_show
    ELSE 
        debug_console_hide
    END IF
END SUB

SUB debug_console_show
    DPRINT "debug_console_show", DEBUG_MAX
    screen_set_both_pages DEBUGGER_CONSOLE
    DEBUG.IN_CONSOLE% = TRUE
END SUB

SUB debug_console_hide
    DPRINT "debug_console_hide", DEBUG_MAX
    IF DEBUG.ENABLED% = TRUE THEN
        screen_set_both_pages GAME_SCREEN
        DEBUG.IN_CONSOLE% = FALSE
    END IF
END SUB

SUB console_clear
    DPRINT "console_clear", DEBUG_MAX
    IF DEBUG.ENABLED% = TRUE THEN
        screen_set_active_page DEBUGGER_CONSOLE
        CLS
        DIM i AS INTEGER
        FOR i% = 0 TO 200
            _ECHO ""
        NEXT i%
    END IF
END SUB

SUB console_mark
    DPRINT "console_mark", DEBUG_MAX
    DIM time_diff AS DOUBLE
    IF DEBUG.ENABLED% = TRUE THEN
        DEBUG.MARK_TIME$  = TIME$
        DEBUG.MARK_TIMER# = TIMER
        DPRINT "", DEBUG_MIN
        IF DEBUG.PREV_MARK_TIMER# > 0 THEN
            time_diff# = DEBUG.MARK_TIMER# - DEBUG.PREV_MARK_TIMER#
            DPRINT DEBUG.PREV_MARK_TIME$ + " TO " + DEBUG.MARK_TIME$ + _
                " (" + _TRIM$(STR$(time_diff#)) + ")" + _
                STRING$(40, "="), DEBUG_MIN
        ELSE
            DPRINT DEBUG.MARK_TIME$ + " " + STRING$(40, "="), DEBUG_MIN
        END IF
        DPRINT "", DEBUG_MIN
        DEBUG.PREV_MARK_TIME$  = DEBUG.MARK_TIME$
        DEBUG.PREV_MARK_TIMER# = DEBUG.MARK_TIMER#
    END IF
END SUB

SUB console_log (s$)
    IF DEBUG.ENABLED% = TRUE THEN
        screen_set_active_page DEBUGGER_CONSOLE
        LOCATE ,1 : PRINT s$
    END IF
END SUB

SUB DPRINT (s$, verbosity%)
    IF DEBUG.ENABLED% = TRUE THEN 
        IF DEBUG.VERBOSITY% >= verbosity% THEN console_log(s$)
    END IF
    IF DEBUG.VERBOSE% = TRUE THEN 
        IF DEBUG.VERBOSITY% >= verbosity% THEN _ECHO s$
    END IF
END SUB