SUB block_init
    BLOCK.X%       = 1
    BLOCK.Y%       = 1
    BLOCK.W%       = CFG.BLOCK_MAX_W%
    BLOCK.H%       = CFG.BLOCK_MAX_H%
    BLOCK.INDEX%   = 0
    BLOCK.KOLOR%   = 10
    BLOCK.LIVES%   = 3
    BLOCK.DISPLAY$ = CHR$(219)
END SUB


SUB blocks_init
    REDIM BLOCKS(1 TO CFG.NUM_BLOCKS%) AS BLOCK_OBJECT
    DIM AS INTEGER i, j, w, h, x, y, c
    screen_clear
    FOR i% = 1 TO CFG.NUM_BLOCKS%
        RANDOMIZE TIMER
        w% = rand_in_range(1, CFG.BLOCK_MAX_W%)
        h% = rand_in_range(1, CFG.BLOCK_MAX_H%)
        DO: 'prevent creation of block where ball currently is
            x% = clamp(INT(RND * LEVEL.END_X%) - w%, 1, LEVEL.END_X%)
            y% = clamp(INT(RND * LEVEL.END_Y%) - h%, 1, LEVEL.END_Y%)
        UNTIL _
            x% NOT in_range(dec(BALL.X%), inc(BALL.X%)) AND _
            y% NOT in_range(dec(BALL.Y%), inc(BALL.Y%))
        IF CFG.RANDOM_BG% THEN 
            c% = rand_in_range(8,15)
        ELSE
            c% = rand_in_range(1,15)
        END IF
        BLOCKS(i%).X% = x%
        BLOCKS(i%).Y% = y%
        BLOCKS(i%).W% = w%
        BLOCKS(i%).H% = h%
        BLOCKS(i%).KOLOR% = c%
        FOR j% = y% TO y%+h%
            LOCATE j%, x%
            COLOR c%
            PRINT STRING$(w%, BLOCK.DISPLAY$);
        NEXT j%    
    NEXT i%
END SUB

SUB blocks_inc
    CFG.PREV_NUM_BLOCKS% = CFG.NUM_BLOCKS%
    CFG.NUM_BLOCKS% = min(dec(CFG.NUM_BLOCKS%), 1)
    IF CFG.PREV_NUM_BLOCKS% <> CFG.NUM_BLOCKS% THEN blocks_init
END SUB


SUB blocks_dec
    CFG.PREV_NUM_BLOCKS% = CFG.NUM_BLOCKS%
    CFG.NUM_BLOCKS% = min(inc(CFG.NUM_BLOCKS%), 1)
    IF CFG.PREV_NUM_BLOCKS% <> CFG.NUM_BLOCKS% THEN blocks_init
END SUB
