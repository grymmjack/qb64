$INCLUDEONCE

SUB block_init
    DPRINT "block_init", DEBUG_AVG
    BLOCK.X%       = 1
    BLOCK.Y%       = 1
    BLOCK.W%       = CFG.BLOCK_MAX_W%
    BLOCK.H%       = CFG.BLOCK_MAX_H%
    BLOCK.INDEX%   = 0
    BLOCK.KOLOR&   = 10
    BLOCK.LIVES%   = 3
    BLOCK.DISPLAY$ = CHR$(219) 'CHR$(177)
END SUB


SUB blocks_init
    DPRINT "blocks_init", DEBUG_AVG
    blocks_sound_init
    DIM AS INTEGER i, j, w, h, x, y, in_range_x, in_range_y
    DIM c AS LONG
    screen_clear
    IF CFG.RAND_NUM_BLOCKS% = TRUE THEN
        CFG.PREV_NUM_BLOCKS% = CFG.NUM_BLOCKS%
        CFG.NUM_BLOCKS% = rand_in_range(1, CFG.ORIG_NUM_BLOCKS%)
    END IF
    REDIM BLOCKS(1 TO CFG.NUM_BLOCKS%) AS BLOCK_OBJECT
    ball_get_9grid
    FOR i% = 1 TO CFG.NUM_BLOCKS%
        w% = rand_in_range(1, CFG.BLOCK_MAX_W%)
        h% = rand_in_range(1, CFG.BLOCK_MAX_H%)
        DO: 'prevent creation of block where ball currently is
            x% = clamp(rand_in_range(LEVEL.START_X%, LEVEL.END_X%-w%), 1, LEVEL.END_X%)
            y% = clamp(rand_in_range(LEVEL.START_Y%, LEVEL.END_Y%-h%), 1, LEVEL.END_Y%)
            in_range_x% = in_range(BALL.X%, x%, x%+w%)
            in_range_y% = in_range(BALL.Y%, y%, y%+h%)
        LOOP UNTIL in_range_x% = FALSE AND in_range_y% = FALSE AND ball_will_bounce_9grid(y%, x%) = FALSE
        IF CFG.RANDOM_BG% = TRUE THEN 
            DO:
                c& = rand_in_range(8,15)
            LOOP UNTIL c& <> _BACKGROUNDCOLOR
        ELSE
            DO:
                c& = rand_in_range(1,15)
            LOOP UNTIL c& <> _BACKGROUNDCOLOR
        END IF
        IF CFG.RANDOM_FG% = TRUE THEN
            DO:
                BALL.KOLOR& = rand_in_range(8,15)
            LOOP UNTIL BALL.KOLOR& <> _BACKGROUNDCOLOR
        END IF
        ' kludge to fix contrast for low contrast color combinations
        IF BALL.KOLOR& = 3 AND _BACKGROUNDCOLOR = 2 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 2 AND _BACKGROUNDCOLOR = 3 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 4 AND _BACKGROUNDCOLOR = 5 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 5 AND _BACKGROUNDCOLOR = 4 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 1 AND _BACKGROUNDCOLOR = 4 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 4 AND _BACKGROUNDCOLOR = 1 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 6 AND _BACKGROUNDCOLOR = 5 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 5 AND _BACKGROUNDCOLOR = 6 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 6 AND _BACKGROUNDCOLOR = 4 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 4 AND _BACKGROUNDCOLOR = 6 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 6 AND _BACKGROUNDCOLOR = 3 THEN BALL.KOLOR& = 15
        IF BALL.KOLOR& = 3 AND _BACKGROUNDCOLOR = 6 THEN BALL.KOLOR& = 15
        IF _BACKGROUNDCOLOR = 7 THEN BALL.KOLOR& = 0
        BLOCKS(i%).X% = x%
        BLOCKS(i%).Y% = y%
        BLOCKS(i%).W% = rand_in_range(1, CFG.BLOCK_MAX_W%)
        BLOCKS(i%).H% = rand_in_range(1, CFG.BLOCK_MAX_H%)
        BLOCKS(i%).KOLOR& = c&
        FOR j% = y% TO y%+h%
            screen_set_active_page GAME_SCREEN
            LOCATE j%, x%
            COLOR c&, __SCREEN.BG_KOLOR&
            PRINT STRING$(w%, BLOCK.DISPLAY$);
        NEXT j%    
    NEXT i%
END SUB


SUB blocks_inc
    DPRINT "blocks_inc", DEBUG_AVG
    CFG.PREV_NUM_BLOCKS% = CFG.NUM_BLOCKS%
    CFG.NUM_BLOCKS% = min(CFG.NUM_BLOCKS%+1, 1)
    IF CFG.PREV_NUM_BLOCKS% <> CFG.NUM_BLOCKS% THEN blocks_init
END SUB


SUB blocks_dec
    DPRINT "blocks_dev", DEBUG_AVG
    CFG.PREV_NUM_BLOCKS% = CFG.NUM_BLOCKS%
    CFG.NUM_BLOCKS% = min(CFG.NUM_BLOCKS%-1, 1)
    IF CFG.PREV_NUM_BLOCKS% <> CFG.NUM_BLOCKS% THEN blocks_init
END SUB


SUB blocks_sound_init
    DPRINT "blocks_sound_init", DEBUG_AVG
    IF CFG.SOUND_ENABLED% = FALSE THEN EXIT SUB
    DIM r AS INTEGER
    r% = rand_in_range(1,6)
    SELECT CASE r%
        CASE 1:
            PLAY "V70 O3 T180 MS L32 C,C#,D,D# O4 C,C#,D,D# O5 C,C#,D,D# MB"
        CASE 2: 
            PLAY "V70 O3 T180 MS L32 G,G#,A,A# O4 G,G#,A,A# O5 G,G#,A,A# MB"
        CASE 3:
            PLAY "V70 O3 T180 MS L32 D,D#,E,E# O4 D,D#,E,E# O5 D,D#,E,E# MB"
        CASE 4:
            PLAY "V70 O3 T180 MS L32 F,F#,G,G# O4 F,F#,G,G# O5 F,F#,G,G# MB"
        CASE 5:
            PLAY "V70 O3 T180 MS L32 B,B#,C,C# O4 B,B#,C,C# O5 B,B#,C,C# MB"
        CASE 5:
            PLAY "V70 O3 T255 MS L32 A,A#,C,C# O4 A,A#,C,C# O5 A,A#,C,C# MB"
    END SELECT    
END SUB