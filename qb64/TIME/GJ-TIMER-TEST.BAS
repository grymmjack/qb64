DIM SHARED GJ_TIMERS(1) AS INTEGER
DIM SHARED GJ_TIMER_TICKS(1) AS INTEGER

DIM SHARED TIMER_A AS INTEGER
DIM SHARED TIMER_A_TICKS AS INTEGER

DIM SHARED TIMER_B AS INTEGER
DIM SHARED TIMER_B_TICKS AS INTEGER

TIMER_A% = _FREETIMER
TIMER_B% = _FREETIMER

TIMER_A_TICKS% = 1
TIMER_B_TICKS% = 1

ON TIMER(TIMER_A%, 2) timer_a_update
ON TIMER(TIMER_B%, 1) timer_b_update

TIMER(TIMER_A%) ON
TIMER(TIMER_B%) ON

DO:
    _LIMIT 5
    LOCATE 1, 1 : PRINT _TRIM$(STR$(TIMER_A_TICKS%));
    LOCATE 3, 1 : PRINT _TRIM$(STR$(TIMER_B_TICKS%));
    _DISPLAY
LOOP UNTIL _KEYHIT = 27
SYSTEM

SUB timer_a_update
    TIMER_A_TICKS% = TIMER_A_TICKS% + 1
END SUB

SUB timer_b_update
    TIMER_B_TICKS% = TIMER_B_TICKS% + 1
END Sub


FUNCTION gj_freetimer% ()
    DIM t AS INTEGER
    t% = UBOUND(GJ_TIMERS%) + 1
    REDIM _PRESERVE GJ_TIMERS%(t%)
    REDIM _PRESERVE GJ_TIMERS%(t%)
    gj_freetimer% = GJ_TIMERS%(t%)
END FUNCTION


SUB gj_do_timers
    DIM AS INTEGER u, l, i
    l% = LBOUND(GJ_TIMERS%) : u% = UBOUND(GJ_TIMERS%)
    FOR i% = l% TO u%
        GJ_TIMER_TICKS%(i%) = GJ_TIMER_TICKS%(i%) + 1
    NEXT i%
END SUB